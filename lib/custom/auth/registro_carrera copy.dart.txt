import 'package:flutkit/custom/auth/registro_intereses.dart';
import 'package:flutkit/custom/models/carrera.dart';
import 'package:flutkit/custom/models/universidad.dart';
import 'package:flutkit/custom/theme/styles.dart';
import 'package:flutkit/custom/utils/validaciones.dart';
import 'package:flutkit/custom/widgets/progress_custom.dart';
import 'package:flutkit/helpers/extensions/extensions.dart';
import 'package:flutkit/homes/homes_screen.dart';
import 'package:flutter/cupertino.dart';
import 'package:multi_dropdown/multiselect_dropdown.dart';
import 'package:provider/provider.dart';
import 'package:flutkit/custom/controllers/profile_controller.dart';
import 'package:flutkit/custom/models/user.dart';
import 'package:flutkit/custom/utils/server.dart';
import 'package:flutkit/helpers/theme/app_notifier.dart';
import 'package:flutkit/helpers/theme/app_theme.dart';
import 'package:flutkit/helpers/widgets/my_spacing.dart';
import 'package:flutkit/helpers/widgets/my_text.dart';
import 'package:flutter/material.dart';
import 'package:lucide_icons/lucide_icons.dart';
import 'package:flutkit/loading_effect.dart';

class RegistroCarrera extends StatefulWidget {
  @override
  _RegistroCarreraState createState() => _RegistroCarreraState();
}

class _RegistroCarreraState extends State<RegistroCarrera> {
  late CustomTheme customTheme;
  late ThemeData theme;
  late ProfileController controller;
  Validacion validacion = Validacion();
  UserMeta _userMeta = UserMeta();
  User _user = User();
  int _isInProgress = -1;
  final Map<String, String> _errores = {
    "carreras": "",
    "infoCar": "",
    "aplicacionTest": "",
    "universidades": "",
    "universidadExtranjera": "",
    "departamento": "",
  };
  List<Carrera> _carreras = [];
  List<Universidad> _universidades = [];
  @override
  void initState() {
    super.initState();
    customTheme = AppTheme.customTheme;
    theme = AppTheme.theme;
    controller = ProfileController();
    cargarDatos();
  }
  void cargarDatos() async{
    _user = Provider.of<AppNotifier>(context, listen: false).user;
    _userMeta = await ApiService().getUserMeta(_user.id!);
    _carreras = await ApiService().getCarreras();
    setState(() {
      controller.uiLoading = false;
    });
  }
  void _validarCampos(){
    if(_userMeta.testVocacional!){
      _errores["aplicacionTest"] = _userMeta.aplicacionTest == null || _userMeta.aplicacionTest!.isEmpty ? "Este campo es requerido" : "";
    }else{
      _errores["aplicacionTest"] = "";
      _userMeta.aplicacionTest = "";
    }
    if(_userMeta.estudiarBolivia!){
      _errores["departamento"] = _userMeta.departamentoEstudiar == null || _userMeta.departamentoEstudiar!.isEmpty ? "Este campo es requerido" : "";
      _errores["universidadExtranjera"] = "";
      _userMeta.universidadExtranjera = "";
    }else{
      _errores["universidadExtranjera"] = _userMeta.universidadExtranjera == null || _userMeta.universidadExtranjera!.isEmpty ? "Este campo es requerido" : "";
      _errores["departamento"] = "";
      _userMeta.departamentoEstudiar = "";
    }
    if(_userMeta.departamentoEstudiar!.isNotEmpty){
      _errores["universidades"] = (_userMeta.universidades == null || _userMeta.universidades!.isEmpty || _userMeta.universidades!.length > 3) ? "Selecciona de 1 a 3 universidades" : "";
    }else{
      _errores["universidades"] = "";
      _userMeta.universidades = [];
    }
    _errores["carreras"] =(_userMeta.carreras == null || _userMeta.carreras!.isEmpty || _userMeta.carreras!.length > 3) ? "Selecciona de 1 a 3 carreras" : "";
    _errores["infoCar"] = _userMeta.infoCar == null || _userMeta.infoCar!.isEmpty ? "Este campo es requerido" : "";

    setState(() {

    });

    if (_errores["carreras"]!.isEmpty && _errores["infoCar"]!.isEmpty && _errores["aplicacionTest"]!.isEmpty && _errores["universidades"]!.isEmpty) {
      _registrarCarrera();
    }
  }
  void _registrarCarrera() async {
    try {
      setState(() {
        _isInProgress = 0;
      });
      bool bandera = await ApiService().registrarCarrera(_userMeta, _user.id!);
      if(!bandera) {
        setState(() {
          _errores["error"] = "Algo salio mal, intentalo màs tarde";
          _isInProgress = -1;
        });
      } else {
        if(_user.estado == "Completado"){
          setState(() {
            _isInProgress = -1;
          });
          Navigator.pushAndRemoveUntil(context,MaterialPageRoute(builder: (context) => HomesScreen(indice: 4,)),(Route<dynamic> route) => false);
        }else{
          _user.estado = "Perfil parte 2";
          Provider.of<AppNotifier>(context, listen: false).setUser(_user);
          setState(() {
            _isInProgress = -1;
          });
          Navigator.pushAndRemoveUntil(context,MaterialPageRoute(builder: (context) => HomesScreen(indice: 4,)),(Route<dynamic> route) => false);
          Navigator.push(context, MaterialPageRoute(builder: (context) => RegistroIntereses()));
        }
      }
    } on Exception catch (e) {
      setState(() {
        _isInProgress = -1;
        _errores["error"] = e.toString().substring(11);
      });
    }
  }
  void _onOptionSelectedCarrera(List<ValueItem> selectedOptions) {
    _userMeta.carreras = [];
    if (selectedOptions.isNotEmpty) {
      for (var opcion in selectedOptions) {
        Map<String, dynamic> aux = {
          "id": opcion.value!,
          "nombre": opcion.label
        };
        _userMeta.carreras!.add(aux);
      }
      setState(() {
      });
    } else {
      setState(() {
        _userMeta.carreras = [];
      });
    }
  }
  void _onOptionSelectedDepartamento(List<ValueItem> selectedOptions) async {
    if(selectedOptions.isNotEmpty){
      _userMeta.departamentoEstudiar = selectedOptions[0].label;
      _userMeta.universidades = [];
      _universidades = await ApiService().getUnivesidadeForId(int.parse(selectedOptions[0].value!));
    }else{
      _userMeta.departamentoEstudiar = "";
    }
    setState(() {});
    // Aquí puedes realizar otras acciones con las opciones seleccionadas, si es necesario
  }
  void _onOptionSelectedUniversidad(List<ValueItem> selectedOptions) {
    if (selectedOptions.isNotEmpty) {
      _userMeta.universidades = [];
      for (var opcion in selectedOptions) {
        String aux = opcion.label;
        _userMeta.universidades!.add(aux);
      }
      setState(() {
      });
    } else {
      setState(() {
        _userMeta.universidades = [];
      });
    }
  }
  void _onOptionSelectedInfoCar(List<ValueItem> selectedOptions) {
    if(selectedOptions.isNotEmpty){
      _userMeta.infoCar = selectedOptions[0].label;
    }else{
      _userMeta.infoCar = "";
    }
    setState(() {});
  }
  void _onOptionSelectedDonde(List<ValueItem> selectedOptions) {
    if(selectedOptions.isNotEmpty){
      _userMeta.aplicacionTest = selectedOptions[0].label;
    }else{
      _userMeta.aplicacionTest = "";
    }
    setState(() {});
  }
  void _onOptionSelectedInfo(List<ValueItem> selectedOptions) {
    if (selectedOptions.isNotEmpty) {
      _userMeta.recibirInfo = [];
      List<String> recibirInfo = selectedOptions.map((option) => option.label).toList();
      setState(() {
        _userMeta.recibirInfo = recibirInfo;
      });
    } else {
      setState(() {
        _userMeta.recibirInfo = [];
      });
    }
  }
  void _actualizarUniversidades(int id) async{
    _universidades = await ApiService().getUnivesidadeForId(1);
  }
  List<ValueItem> _armarsSelectedOptions(String  meta){
    List<ValueItem> res = [];
    if(meta == "recibirInfo"){
      if(_userMeta.recibirInfo!.isNotEmpty){
        for (var item in _userMeta.recibirInfo!) {
          ValueItem aux = ValueItem(
            label: item
          );
          res.add(aux);
        }
      }
    }
    if(meta == "universidades"){
      if(_userMeta.universidades!.isNotEmpty){
        for (var item in _userMeta.universidades!) {
          ValueItem aux = ValueItem(
            label: item
          );
          res.add(aux);
        }
      }
    }
    if(meta == "departamentoEstudiar"){
      if(_userMeta.departamentoEstudiar!.isNotEmpty){
        if (_userMeta.departamentoEstudiar! == "CHUQUISACA") {
          ValueItem aux = ValueItem(label: _userMeta.departamentoEstudiar!, value: '1');
          _actualizarUniversidades(1);
          res.add(aux);
        } else if (_userMeta.departamentoEstudiar! == "LA PAZ") {
          ValueItem aux = ValueItem(label: _userMeta.departamentoEstudiar!, value: '2');
          _actualizarUniversidades(2);
          res.add(aux);
        } else if (_userMeta.departamentoEstudiar! == "ORURO") {
          ValueItem aux = ValueItem(label: _userMeta.departamentoEstudiar!, value: '4');
          _actualizarUniversidades(4);
          res.add(aux);
        } else if (_userMeta.departamentoEstudiar! == "TARIJA") {
          ValueItem aux = ValueItem(label: _userMeta.departamentoEstudiar!, value: '6');
          _actualizarUniversidades(6);
          res.add(aux);
        } else if (_userMeta.departamentoEstudiar! == "SANTA CRUZ") {
          ValueItem aux = ValueItem(label: _userMeta.departamentoEstudiar!, value: '7');
          _actualizarUniversidades(7);
          res.add(aux);
        } else if (_userMeta.departamentoEstudiar! == "PANDO") {
          ValueItem aux = ValueItem(label: _userMeta.departamentoEstudiar!, value: '9');
          _actualizarUniversidades(9);
          res.add(aux);
        } else if (_userMeta.departamentoEstudiar! == "COCHABAMBA") {
          ValueItem aux = ValueItem(label: _userMeta.departamentoEstudiar!, value: '11');
          _actualizarUniversidades(11);
          res.add(aux);
        } else if (_userMeta.departamentoEstudiar! == "POTOSÍ") {
          ValueItem aux = ValueItem(label: _userMeta.departamentoEstudiar!, value: '12');
          _actualizarUniversidades(12);
          res.add(aux);
        } else if (_userMeta.departamentoEstudiar! == "BENI") {
          ValueItem aux = ValueItem(label: _userMeta.departamentoEstudiar!, value: '13');
          _actualizarUniversidades(13);
          res.add(aux);
        }
      }
    }
    if(meta == "infoCar"){
      if(_userMeta.infoCar!.isNotEmpty){
        ValueItem aux = ValueItem(label: _userMeta.infoCar!);
        res.add(aux);
      }
    }
    if(meta == "aplicacionTest"){
      if(_userMeta.aplicacionTest!.isNotEmpty){
        ValueItem aux = ValueItem(label: _userMeta.aplicacionTest!);
        res.add(aux);
      }
    }
    if(meta == "carreras"){
      if(_userMeta.carreras!.isNotEmpty){
        for (var item in _userMeta.carreras!) {
          ValueItem aux = ValueItem(
            value: item["id"].toString(),
            label: item["nombre"]
          );
          res.add(aux);
        }
      }
    }
    return res;
  }
  @override
  Widget build(BuildContext context) {
    if (controller.uiLoading) {
      return Scaffold(
        body: Container(
          margin: MySpacing.top(MySpacing.safeAreaTop(context) + 20),
          child: LoadingEffect.getSearchLoadingScreen(
            context,
          ),
        ),
      );
    } else {
      return Scaffold(
        backgroundColor: Color.fromRGBO(244, 251, 249, 1),
        appBar: AppBar(
          leading: InkWell(
            onTap: () {
              Navigator.pop(context);
            },
            child: Icon(
              LucideIcons.chevronLeft,
              size: 20,
              color: theme.colorScheme.onBackground,
            ).autoDirection(),
          ),
        ),
        body: SingleChildScrollView(
          child: Stack(
            children: <Widget>[
              Column(
                children: <Widget>[
                  Container(
                    padding: EdgeInsets.fromLTRB(20, 20, 20, 20),
                    color: Color.fromRGBO(244, 251, 249, 1),
                    child: Column(     
                      children: <Widget>[
                        Row(
                          children: <Widget>[// Espacio entre el icono y el texto
                            MyText.titleLarge(
                              "Tus preferencias de carrera",
                              style: TextStyle(
                                fontSize: 20.0,
                                fontWeight: FontWeight.bold,
                              ),
                            ),
                          ],
                        ),
                        SizedBox(height: 8), // Espacio entre el título y el texto
                        MyText.bodyMedium(
                          'Gracias a esta información recibirás una atención pedagógica adecuada tu perfil.',
                          style: TextStyle(
                            color: Colors.black,
                            fontSize: 15.0,
                            fontWeight: FontWeight.normal,
                          ),
                        ),
                        SizedBox(height: 8),
                        Divider(),
                        Column(
                          children: <Widget>[
                            Container(
                              margin: EdgeInsets.only(top: 16, bottom: 8),
                              child: Column(
                                crossAxisAlignment: CrossAxisAlignment.start,
                                children: <Widget>[
                                  MyText.bodyMedium(
                                    '¿Ya hiciste un Test Vocacional?',
                                    style: TextStyle(
                                      color: Colors.black,
                                      fontSize: 12.0,
                                      fontWeight: FontWeight.w400,
                                    ),
                                  ),
                                  SizedBox(height: 16.0),
                                  Row(
                                    mainAxisAlignment: MainAxisAlignment.start, // Alinea los hijos a la izquierda
                                    children: [
                                      ChoiceChip(
                                        avatar: _userMeta.testVocacional! ? Icon(Icons.check_circle_outline) : Icon(Icons.circle_outlined),
                                        checkmarkColor: Colors.white,
                                        materialTapTargetSize: MaterialTapTargetSize.shrinkWrap,
                                        selectedColor: Color.fromRGBO(5, 50, 12, 1),
                                        label: MyText.bodyMedium(
                                          "Si",
                                          color: _userMeta.testVocacional!
                                          ? theme.colorScheme.onPrimary
                                          : theme.colorScheme.onBackground
                                        ),
                                        selected: _userMeta.testVocacional!,
                                        onSelected: (selected) {
                                          setState(() {
                                            _userMeta.testVocacional = selected; 
                                          });
                                        },
                                        shape: RoundedRectangleBorder(
                                          side: BorderSide(
                                            color: Color.fromRGBO(5, 50, 12, 1), // Color del borde
                                            width: 1.0, // Ancho del borde
                                          ),
                                          borderRadius: BorderRadius.circular(14), // Radio de borde
                                        ),
                                      ),
                                      SizedBox(width: 8.0),
                                      ChoiceChip(
                                        avatar: _userMeta.testVocacional! ? Icon(Icons.circle_outlined) : Icon(Icons.check_circle_outline),
                                        checkmarkColor: Colors.white,
                                        materialTapTargetSize: MaterialTapTargetSize.shrinkWrap,
                                        selectedColor: Color.fromRGBO(5, 50, 12, 1),
                                        label: MyText.bodyMedium(
                                          "No",
                                          color: !_userMeta.testVocacional!
                                          ? theme.colorScheme.onPrimary
                                          : theme.colorScheme.onBackground
                                        ),
                                        selected: !_userMeta.testVocacional!,
                                        onSelected: (selected) {
                                          setState(() {
                                            _userMeta.testVocacional = !selected; 
                                          });
                                        },
                                        shape: RoundedRectangleBorder(
                                          side: BorderSide(
                                            color: Color.fromRGBO(5, 50, 12, 1), // Color del borde
                                            width: 1.0, // Ancho del borde
                                          ),
                                          borderRadius: BorderRadius.circular(14), // Radio de borde
                                        ),
                                      ),
                                    ],
                                  ),
                                ],
                              ),
                            ),
                            Visibility(
                              visible: _userMeta.testVocacional ?? false,
                              child: Container(
                                margin: EdgeInsets.only(top: 16, bottom: 8),
                                child: Column(
                                  crossAxisAlignment: CrossAxisAlignment.start,
                                  children: <Widget>[
                                    Container(
                                      margin: EdgeInsets.only(top: 16, bottom: 8),
                                      child: Column(
                                        crossAxisAlignment: CrossAxisAlignment.start,
                                        children: <Widget>[
                                          MyText.bodyMedium(
                                            '¿Dónde de aplicarón el test?',
                                            style: TextStyle(
                                              color: Colors.black,
                                              fontSize: 12.0,
                                              fontWeight: FontWeight.w400,
                                            ),
                                          ),
                                          SizedBox(height: 16.0),
                                          Container(
                                            decoration: BoxDecoration(
                                              color: Colors.white,
                                              borderRadius: BorderRadius.circular(10),
                                              boxShadow: [
                                                BoxShadow(
                                                  color: Colors.grey.withOpacity(0.5), // Color de la sombra con opacidad
                                                  spreadRadius: 2, // Radio de propagación
                                                  blurRadius: 5, // Radio de desenfoque
                                                  offset: Offset(0, 3), // Desplazamiento de la sombra (horizontal, vertical)
                                                ),
                                              ],
                                            ),
                                            child: MultiSelectDropDown(
                                              onOptionSelected: _onOptionSelectedDonde,
                                              options: const <ValueItem>[
                                                ValueItem(label: 'En el colegio'),
                                                ValueItem(label: 'En la UPSA'),
                                                ValueItem(label: 'Servicio Privado'),
                                                ValueItem(label: 'En otra Universidad'),
                                              ],
                                              hint: "- Seleccionar -",
                                              selectionType: SelectionType.single,
                                              chipConfig: const ChipConfig(wrapType: WrapType.wrap, backgroundColor: Color.fromRGBO(32, 104, 14, 1)),
                                              optionTextStyle: const TextStyle(fontSize: 12, fontWeight: FontWeight.normal),
                                              selectedOptionIcon: const Icon(Icons.check_circle),
                                              borderRadius: 10,
                                              selectedOptions:_armarsSelectedOptions("aplicacionTest"),
                                            ),
                                          ),
                                        ],
                                      ),
                                    ),
                                    if (_errores["aplicacionTest"]!.isNotEmpty)
                                      Padding(
                                        padding: EdgeInsets.only(top: 8),
                                        child: Text(
                                          _errores["aplicacionTest"]!,
                                          style: TextStyle(color: Colors.red),
                                          textAlign: TextAlign.start,
                                        ),
                                      ),
                                  ],
                                ),
                              ),
                            ),
                            Container(
                              margin: EdgeInsets.only(top: 16, bottom: 8),
                              child: Column(
                                crossAxisAlignment: CrossAxisAlignment.start,
                                children: <Widget>[
                                  MyText.bodyMedium(
                                    'Selecciona hasta tres carreras que te gustaría estudiar(en orden de importancia)',
                                    style: TextStyle(
                                      color: Colors.black,
                                      fontSize: 12.0,
                                      fontWeight: FontWeight.w400,
                                    ),
                                  ),
                                  SizedBox(height: 16.0),
                                  Container(
                                    decoration: BoxDecoration(
                                      color: Colors.white,
                                      borderRadius: BorderRadius.circular(10),
                                      boxShadow: [
                                        BoxShadow(
                                          color: Colors.grey.withOpacity(0.5), // Color de la sombra con opacidad
                                          spreadRadius: 2, // Radio de propagación
                                          blurRadius: 5, // Radio de desenfoque
                                          offset: Offset(0, 3), // Desplazamiento de la sombra (horizontal, vertical)
                                        ),
                                      ],
                                    ),
                                    child: MultiSelectDropDown(
                                      onOptionSelected: _onOptionSelectedCarrera,
                                      options: _buildValueItems("carreras"),
                                      hint: "- Seleccionar -",
                                      selectionType: SelectionType.multi,
                                      chipConfig: const ChipConfig(wrapType: WrapType.wrap, backgroundColor: AppColorStyles.verde2),
                                      optionTextStyle: const TextStyle(fontSize: 12, fontWeight: FontWeight.normal),
                                      selectedOptionIcon: const Icon(Icons.check_circle, color: AppColorStyles.verde2),
                                      selectedOptionTextColor: AppColorStyles.oscuro1,
                                      selectedOptionBackgroundColor: AppColorStyles.verdeFondo,
                                      borderRadius: 10,
                                      selectedOptions:_armarsSelectedOptions("carreras"),
                                    ),
                                  ),
                                  if (_errores["carreras"]!.isNotEmpty)
                                  Padding(
                                    padding: EdgeInsets.only(top: 8),
                                    child: Text(
                                      _errores["carreras"]!,
                                      style: TextStyle(color: Colors.red),
                                      textAlign: TextAlign.start,
                                    ),
                                  ),
                                ],
                              ),
                            ),
                            Container(
                              margin: EdgeInsets.only(top: 16, bottom: 8),
                              child: Column(
                                crossAxisAlignment: CrossAxisAlignment.start,
                                children: <Widget>[
                                  MyText.bodyMedium(
                                    '¿Qué tan informado estás sobre tus opciones de carrera?',
                                    style: TextStyle(
                                      color: Colors.black,
                                      fontSize: 12.0,
                                      fontWeight: FontWeight.w400,
                                    ),
                                  ),
                                  SizedBox(height: 16.0),
                                  Container(
                                    decoration: BoxDecoration(
                                      color: Colors.white,
                                      borderRadius: BorderRadius.circular(10),
                                      boxShadow: [
                                        BoxShadow(
                                          color: Colors.grey.withOpacity(0.5), // Color de la sombra con opacidad
                                          spreadRadius: 2, // Radio de propagación
                                          blurRadius: 5, // Radio de desenfoque
                                          offset: Offset(0, 3), // Desplazamiento de la sombra (horizontal, vertical)
                                        ),
                                      ],
                                    ),
                                    child: MultiSelectDropDown(
                                      onOptionSelected: _onOptionSelectedInfoCar,
                                      options: const <ValueItem>[
                                        ValueItem(label: 'Poco informado'),
                                        ValueItem(label: 'Medianamente informado'),
                                        ValueItem(label: 'Muy informado'),
                                        ValueItem(label: 'Ninguna de las anteriores'),
                                      ],
                                      hint: "- Seleccionar -",
                                      selectionType: SelectionType.single,
                                      chipConfig: const ChipConfig(wrapType: WrapType.wrap, backgroundColor: Color.fromRGBO(32, 104, 14, 1)),
                                      optionTextStyle: const TextStyle(fontSize: 12, fontWeight: FontWeight.normal),
                                      selectedOptionIcon: const Icon(Icons.check_circle),
                                      borderRadius: 10,
                                      selectedOptions:_armarsSelectedOptions("infoCar"),
                                    ),
                                  ),
                                  if (_errores["infoCar"]!.isNotEmpty)
                                  Padding(
                                    padding: EdgeInsets.only(top: 8),
                                    child: Text(
                                      _errores["infoCar"]!,
                                      style: TextStyle(color: Colors.red),
                                      textAlign: TextAlign.start,
                                    ),
                                  ),
                                ],
                              ),
                            ),
                            Container(
                              margin: EdgeInsets.only(top: 16, bottom: 8),
                              child: Column(
                                crossAxisAlignment: CrossAxisAlignment.start,
                                children: <Widget>[
                                  MyText.bodyMedium(
                                    '¿Piensas estudiar en Bolivia o en el extranjero?',
                                    style: TextStyle(
                                      color: Colors.black,
                                      fontSize: 12.0,
                                      fontWeight: FontWeight.w400,
                                    ),
                                  ),
                                  SizedBox(height: 16.0),
                                  Row(
                                    mainAxisAlignment: MainAxisAlignment.start, // Alinea los hijos a la izquierda
                                    children: [
                                      ChoiceChip(
                                        avatar: _userMeta.estudiarBolivia! ? Icon(Icons.check_circle_outline) : Icon(Icons.circle_outlined),
                                        checkmarkColor: Colors.white,
                                        materialTapTargetSize: MaterialTapTargetSize.shrinkWrap,
                                        selectedColor: Color.fromRGBO(5, 50, 12, 1),
                                        label: MyText.bodyMedium(
                                          "Bolivia",
                                        color: _userMeta.estudiarBolivia!
                                          ? theme.colorScheme.onPrimary
                                          : theme.colorScheme.onBackground
                                        ),
                                        selected: _userMeta.estudiarBolivia!,
                                        onSelected: (selected) {
                                          setState(() {
                                            _userMeta.estudiarBolivia = selected; 
                                          });
                                        },
                                        shape: RoundedRectangleBorder(
                                          side: BorderSide(
                                            color: Color.fromRGBO(5, 50, 12, 1), // Color del borde
                                            width: 1.0, // Ancho del borde
                                          ),
                                          borderRadius: BorderRadius.circular(14), // Radio de borde
                                        ),
                                      ),
                                      SizedBox(width: 8.0),
                                      ChoiceChip(
                                        avatar: !_userMeta.estudiarBolivia! ? Icon(Icons.check_circle_outline) : Icon(Icons.circle_outlined),
                                        checkmarkColor: Colors.white,
                                        materialTapTargetSize: MaterialTapTargetSize.shrinkWrap,
                                        selectedColor: Color.fromRGBO(5, 50, 12, 1),
                                        label: MyText.bodyMedium(
                                          "Extranjero",
                                        color: !_userMeta.estudiarBolivia!
                                          ? theme.colorScheme.onPrimary
                                          : theme.colorScheme.onBackground
                                        ),
                                        selected: !_userMeta.estudiarBolivia!,
                                        onSelected: (selected) {
                                          setState(() {
                                            _userMeta.estudiarBolivia = !selected; 
                                          });
                                        },
                                        shape: RoundedRectangleBorder(
                                          side: BorderSide(
                                            color: Color.fromRGBO(5, 50, 12, 1), // Color del borde
                                            width: 1.0, // Ancho del borde
                                          ),
                                          borderRadius: BorderRadius.circular(14), // Radio de borde
                                        ),
                                      ),
                                    ],
                                  ),
                                ],
                              ),
                            ),
                            if(!_userMeta.estudiarBolivia!)
                            Container(
                              margin: EdgeInsets.only(top: 16, bottom: 8),
                              child: Column(
                                crossAxisAlignment: CrossAxisAlignment.start,
                                children: <Widget>[
                                  Container(
                                    decoration: BoxDecoration(
                                      color: Colors.white,
                                      borderRadius: BorderRadius.circular(10),
                                      boxShadow: [
                                        BoxShadow(
                                          color: Colors.grey.withOpacity(0.5), // Color de la sombra con opacidad
                                          spreadRadius: 2, // Radio de propagación
                                          blurRadius: 5, // Radio de desenfoque
                                          offset: Offset(0, 3), // Desplazamiento de la sombra (horizontal, vertical)
                                        ),
                                      ],
                                    ),
                                    child: TextFormField(
                                      initialValue: _userMeta.universidadExtranjera!,
                                      onChanged: (value) {
                                        setState(() {
                                          _userMeta.universidadExtranjera = value;
                                        });
                                      },
                                      decoration: InputDecoration(
                                        contentPadding: EdgeInsets.symmetric(horizontal: 16),
                                        border: InputBorder.none,
                                        labelText: 'Nombre de la Universidad',
                                        labelStyle: TextStyle(fontSize: 16, fontWeight: FontWeight.normal),
                                        focusedBorder: OutlineInputBorder(
                                          borderSide: BorderSide(
                                            color: Color.fromRGBO(5, 50, 12, 1),
                                            width: 2.0,
                                          ),
                                          borderRadius: BorderRadius.circular(10),
                                        ),
                                      ),
                                    ),
                                  ),
                                  if (_errores["universidadExtranjera"]!.isNotEmpty)
                                  Padding(
                                    padding: EdgeInsets.only(top: 8),
                                    child: Text(
                                      _errores["universidadExtranjera"]!,
                                      style: TextStyle(color: Colors.red),
                                      textAlign: TextAlign.start,
                                    ),
                                  ),
                                ],
                              ),
                            ),
                            Visibility(
                              visible: _userMeta.estudiarBolivia!,
                              child: Container(
                                margin: EdgeInsets.only(top: 16, bottom: 8),
                                child: Column(
                                  crossAxisAlignment: CrossAxisAlignment.start,
                                  children: <Widget>[
                                    Container(
                                      margin: EdgeInsets.only(top: 16, bottom: 8),
                                      child: Column(
                                        crossAxisAlignment: CrossAxisAlignment.start,
                                        children: <Widget>[
                                          MyText.bodyMedium(
                                            '¿En qué departamento piensas estudiar?',
                                            style: TextStyle(
                                              color: Colors.black,
                                              fontSize: 12.0,
                                              fontWeight: FontWeight.w400,
                                            ),
                                          ),
                                          SizedBox(height: 16.0),
                                          Container(
                                            decoration: BoxDecoration(
                                              color: Colors.white,
                                              borderRadius: BorderRadius.circular(10),
                                              boxShadow: [
                                                BoxShadow(
                                                  color: Colors.grey.withOpacity(0.5), // Color de la sombra con opacidad
                                                  spreadRadius: 2, // Radio de propagación
                                                  blurRadius: 5, // Radio de desenfoque
                                                  offset: Offset(0, 3), // Desplazamiento de la sombra (horizontal, vertical)
                                                ),
                                              ],
                                            ),
                                            child: MultiSelectDropDown(
                                              onOptionSelected: _onOptionSelectedDepartamento,
                                              options: const <ValueItem>[
                                                ValueItem(label: 'CHUQUISACA', value: '1'),
                                                ValueItem(label: 'LA PAZ', value: '2'),
                                                ValueItem(label: 'ORURO', value: '4'),
                                                ValueItem(label: 'TARIJA', value: '6'),
                                                ValueItem(label: 'SANTA CRUZ', value: '7'),
                                                ValueItem(label: 'PANDO', value: '9'),
                                                ValueItem(label: 'COCHABAMBA', value: '11'),
                                                ValueItem(label: 'POTOSÍ', value: '12'),
                                                ValueItem(label: 'BENI', value: '13'),
                                              ],
                                              hint: "- Seleccionar -",
                                              selectionType: SelectionType.single,
                                              chipConfig: const ChipConfig(wrapType: WrapType.wrap, backgroundColor: Color.fromRGBO(32, 104, 14, 1)),
                                              optionTextStyle: const TextStyle(fontSize: 12, fontWeight: FontWeight.normal),
                                              selectedOptionIcon: const Icon(Icons.check_circle),
                                              borderRadius: 10,
                                              selectedOptions:_armarsSelectedOptions("departamentoEstudiar"),
                                            ),
                                          ),
                                          if (_errores["departamento"]!.isNotEmpty)
                                          Padding(
                                            padding: EdgeInsets.only(top: 8),
                                            child: Text(
                                              _errores["departamento"]!,
                                              style: TextStyle(color: Colors.red),
                                              textAlign: TextAlign.start,
                                            ),
                                          ),
                                        ],
                                      ),
                                    ),
                                  ]
                                ),
                              )
                            ),
                            Visibility(
                              visible: _userMeta.estudiarBolivia! && _userMeta.departamentoEstudiar!.isNotEmpty,
                              child: Column(
                                crossAxisAlignment: CrossAxisAlignment.start,
                                children: <Widget>[
                                  Container(
                                    margin: EdgeInsets.only(top: 16, bottom: 8),
                                    child: Column(
                                      crossAxisAlignment: CrossAxisAlignment.start,
                                      children: <Widget>[
                                        MyText.bodyMedium(
                                          'Selecciona hasta tres universidades dónde te gustaría estudiar (en orden de importancia)',
                                          style: TextStyle(
                                            color: Colors.black,
                                            fontSize: 12.0,
                                            fontWeight: FontWeight.w400,
                                          ),
                                        ),
                                        SizedBox(height: 16.0),
                                        Container(
                                          decoration: BoxDecoration(
                                            color: Colors.white,
                                            borderRadius: BorderRadius.circular(10),
                                            boxShadow: [
                                              BoxShadow(
                                                color: Colors.grey.withOpacity(0.5), // Color de la sombra con opacidad
                                                spreadRadius: 2, // Radio de propagación
                                                blurRadius: 5, // Radio de desenfoque
                                                offset: Offset(0, 3), // Desplazamiento de la sombra (horizontal, vertical)
                                              ),
                                            ],
                                          ),
                                          child: MultiSelectDropDown(
                                            onOptionSelected: _onOptionSelectedUniversidad,
                                            options: _buildValueItems("universidades"),
                                            hint: "- Seleccionar -",
                                            selectionType: SelectionType.multi,
                                            chipConfig: const ChipConfig(wrapType: WrapType.wrap, backgroundColor: Color.fromRGBO(32, 104, 14, 1)),
                                            optionTextStyle: const TextStyle(fontSize: 12, fontWeight: FontWeight.normal),
                                            selectedOptionIcon: const Icon(Icons.check_circle),
                                            borderRadius: 10,
                                            selectedOptions:_armarsSelectedOptions("universidades"),
                                          ),
                                        ),
                                        if (_errores["universidades"]!.isNotEmpty)
                                        Padding(
                                          padding: EdgeInsets.only(top: 8),
                                          child: Text(
                                            _errores["universidades"]!,
                                            style: TextStyle(color: Colors.red),
                                            textAlign: TextAlign.start,
                                          ),
                                        ),
                                      ],
                                    ),
                                  ),
                                ]
                              )
                            ),
                            Container(
                              margin: EdgeInsets.only(top: 16, bottom: 8),
                              child: Column(
                                crossAxisAlignment: CrossAxisAlignment.start,
                                children: <Widget>[
                                  MyText.bodyMedium(
                                    '¿Sobre qué aspectos te gustaría recibir información?(selecciona todas que aplican)',
                                    style: TextStyle(
                                      color: Colors.black,
                                      fontSize: 12.0,
                                      fontWeight: FontWeight.w400,
                                    ),
                                  ),
                                  SizedBox(height: 16.0),
                                  Container(
                                    decoration: BoxDecoration(
                                      color: Colors.white,
                                      borderRadius: BorderRadius.circular(10),
                                      boxShadow: [
                                        BoxShadow(
                                          color: Colors.grey.withOpacity(0.5), // Color de la sombra con opacidad
                                          spreadRadius: 2, // Radio de propagación
                                          blurRadius: 5, // Radio de desenfoque
                                          offset: Offset(0, 3), // Desplazamiento de la sombra (horizontal, vertical)
                                        ),
                                      ],
                                    ),
                                    child: MultiSelectDropDown(
                                      onOptionSelected: _onOptionSelectedInfo,
                                      options: const <ValueItem>[
                                        ValueItem(label: 'Orientación Vocacional'),
                                        ValueItem(label: 'Carreras (planes de estudio)'),
                                        ValueItem(label: 'Concursos académicos'),
                                        ValueItem(label: 'Doble titulación'),
                                        ValueItem(label: 'Intercambio estudiantil'),
                                        ValueItem(label: 'Ferias cientificas y/o emprendiemiento'),
                                        ValueItem(label: 'Actividades deportivas y culturales de la U'),
                                        ValueItem(label: 'Financiamiento/créditos/becas'),
                                        ValueItem(label: 'Programas de Postgrado'),
                                      ],
                                      hint: "- Seleccionar -",
                                      selectionType: SelectionType.multi,
                                      chipConfig: const ChipConfig(wrapType: WrapType.wrap, backgroundColor: Color.fromRGBO(32, 104, 14, 1)),
                                      optionTextStyle: const TextStyle(fontSize: 12, fontWeight: FontWeight.normal),
                                      selectedOptionIcon: const Icon(Icons.check_circle),
                                      borderRadius: 10,
                                      selectedOptions:_armarsSelectedOptions("recibirInfo"),
                                    ),
                                  ),
                                ],
                              ),
                            ),
                            MySpacing.height(20),
                            SizedBox(
                              width: double.infinity,
                              child: CupertinoButton(
                                color: Color.fromRGBO(5, 50, 12, 1),
                                onPressed: () {
                                  _validarCampos();
                                },
                                borderRadius: BorderRadius.all(Radius.circular(5)),
                                padding: MySpacing.xy(100, 16),
                                pressedOpacity: 0.5,
                                child: MyText.bodyMedium(
                                  "Continuar",
                                  style: TextStyle(
                                    fontSize: 16,
                                    fontWeight: FontWeight.w600,
                                  ),
                                ),
                              ),
                            ),
                            MySpacing.height(20),
                          ]
                        ),
                      ]
                    )
                  )
                ]
              ),
              if (_isInProgress == 0)
              Positioned.fill(
                child: ProgressEspera(
                  theme: theme, // Pasar el tema como argumento
                ),
              ),
            ]
          )
        ),
      );
    } 
  }
  List<ValueItem> _buildValueItems(String tipo) {
    if(tipo == "carreras"){
      return _carreras.map((promocion) {
      return ValueItem(
        label: promocion.nombre!,
        value: promocion.id.toString(),
      );
    }).toList();
    }else{
      if(tipo == "universidades"){
        return _universidades.map((universidad) {
        return ValueItem(
          label: universidad.nombre!,
        );
        }).toList();
      }else{
        return [];
      }
    }
  }
}
